{% extends 'admin.html.twig' %}

{% block title %}Edit Property{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        window.onload = function(){
            // récupération des id des panels
            const navInformations = document.getElementById("navInformations");
            const navCustomers = document.getElementById("navCustomers");
            const navEstimate = document.getElementById("navEstimate");
            const navOptions = document.getElementById("navOptions");
            const navGallery = document.getElementById("navGallery");
            const navPublication = document.getElementById("navPublication");

            // récupération des div de chaque panel

            // récupération des boutons de navigation entre panel
            const stepBack = document.getElementById("stepCustomers");
            const stepInformations = document.getElementById("stepInformations");
            const stepCustomers = document.getElementById("stepCustomers");
            const stepEstimate = document.getElementById("stepEstimate");
            const stepOptions = document.getElementById("stepOptions");
            const stepGallery = document.getElementById("stepGallery");
            const stepPublication = document.getElementById("stepPublication");

            // fixer les éléments opérationnel au chargement de la page
            const Informations = document.getElementById("Informations");
            const Customers = document.getElementById("Customers");
            const Estimate = document.getElementById("Estimate");
            const Options = document.getElementById("Options");
            const Gallery = document.getElementById("Gallery");
            const Publication = document.getElementById("Publication");
            // Panels

            document.getElementById('property_name').focus();

            // boutons pour chaque panel
            stepCustomers.className += " d-none";
            stepEstimate.className += " d-none";
            stepOptions.className += " d-none";
            stepGallery.className += " d-none";
            stepPublication.className += " d-none";

            // -------------
            // évenement sur le boutons stepInformations
            // -------------
            stepInformations.onclick = function (event) {
                event.preventDefault()
                // visibilité des éléments
                stepCustomers.className = "btn btn-sm btn-outline-primary";
                stepInformations.className += " d-none";
                navInformations.className = "nav-link disabled";
                navCustomers.className = "nav-link active";
                Informations.className = "tab-pane";
                Customers.className += " active";
                // Elements de formulaire à transmettre
                const url = this.href;
                const name = document.getElementById('property_name').value
                const ref = document.getElementById('property_ref').value
                const adress = document.getElementById('property_adress').value
                const complement = document.getElementById('property_complement').value
                const zipcode = document.getElementById('property_zipcode').value
                const city = document.getElementById('property_city').value
                const annonce = document.getElementById('property_annonce').value
                const piece = parseInt(document.getElementById('property_piece').value)
                const room = parseInt(document.getElementById('property_room').value)
                const isHome = document.getElementById('property_isHome').checked
                const isApartment = document.getElementById('property_isApartment').checked
                const isLand = document.getElementById('property_isLand').checked
                const isOther = document.getElementById('property_isOther').checked
                const otherDescription = document.getElementById('property_otherDescription').value
                let data = { name: name, ref: ref, adress: adress, complement:complement, zipcode:zipcode, city: city, annonce: annonce,
                    piece: piece, room: room, isHome: isHome, isApartment: isApartment, isLand: isLand, isOther: isOther, otherDescription: otherDescription
                }
                // envoie des données
                axios
                    .post(url, data)
                    .then(function(response){
                        console.log('informations ajoutées')
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }

            // -------------
            // évenement sur le boutons stepCustomers
            // -------------
            stepCustomers.onclick = function (event) {
                event.preventDefault()
                // visibilité des éléments
                stepCustomers.className += " d-none";
                stepEstimate.className = "btn btn-sm btn-outline-primary";
                navCustomers.className = "nav-link disabled";
                navEstimate.className = "nav-link active";
                Customers.className = "tab-pane";
                Estimate.className += " active";
            }

            // -------------
            // évenement sur le boutons stepEstimate
            // -------------
            stepEstimate.onclick = function (event) {
                event.preventDefault()
                // visibilité des éléments
                stepEstimate.className += " d-none";
                stepOptions.className = "btn btn-sm btn-outline-primary";
                navEstimate.className = "nav-link disabled";
                navOptions.className = "nav-link active";
                Estimate.className = "tab-pane";
                Options.className += " active";
                // Elements de formulaire à transmettre
                const url = this.href;
                const surfaceLand = parseInt(document.getElementById('property_surfaceLand').value)
                const surfaceHome = parseInt(document.getElementById('property_surfaceHome').value)
                const notaryEstimate = parseInt(document.getElementById('property_notaryEstimate').value)
                const applicantEstimate = parseInt(document.getElementById('property_applicantEstimate').value)
                const dpeAt = document.getElementById('property_dpeAt').value
                const diagDpe = parseInt(document.getElementById('property_diagDpe').value)
                const diagGpe = parseInt(document.getElementById('property_diagGpe').value)
                const cadasterZone = document.getElementById('property_cadasterZone').value
                const cadasterNum = parseInt(document.getElementById('property_cadasterNum').value)
                const cadastersurface = parseInt(document.getElementById('property_cadasterSurface').value)
                const cadasterCariez = parseInt(document.getElementById('property_cadasterCariez').value)
                let data = {
                    surfaceLand:surfaceLand, surfaceHome:surfaceHome, notaryEstimate:notaryEstimate, applicantEstimate:applicantEstimate, dpeAt:dpeAt,
                    diagDpe: diagDpe, diagGpe:diagGpe, cadasterZone:cadasterZone, cadasterNum:cadasterNum, cadastersurface:cadastersurface, cadasterCariez:cadasterCariez
                }
                console.log(data)
                // envoie des données
                axios
                    .post(url, data)
                    .then(function(response){
                        console.log('chiffres ajoutées')
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }

            // -------------
            // évenement sur le boutons stepOptions
            // -------------

            stepOptions.onclick = function (event) {
                event.preventDefault()
                // visibilité des éléments
                stepOptions.className += " d-none";
                stepGallery.className = "btn btn-sm btn-outline-primary";
                navOptions.className = "nav-link disabled";
                navGallery.className = "nav-link active";
                Options.className = "tab-pane";
                Gallery.className += " active";
                // Elements de formulaire à transmettre
                const url = this.href;

                const banner = document.getElementById('complement_banner').value
                const denomination = parseInt(document.getElementById('complement_denomination').value)

                const terrace = parseInt(document.getElementById('complement_terrace').value)
                const washroom = parseInt(document.getElementById('complement_washroom').value)
                const bathroom = parseInt(document.getElementById('complement_bathroom').value)
                const wc = parseInt(document.getElementById('complement_wc').value)
                const balcony = parseInt(document.getElementById('complement_balcony').value)
                const sanitation = parseInt(document.getElementById('complement_sanitation').value)
                const jointness = parseInt(document.getElementById('complement_jointness').value)

                const houseState = document.getElementById('complement_houseState').value
                const energy = document.getElementById('complement_energy').value
                const propertyTax = document.getElementById('complement_propertyTax').value
                const orientation = document.getElementById('complement_orientation').value
                const disponibility = document.getElementById('complement_disponibility').value
                const location = document.getElementById('complement_location').value
                const disponibilityAt = document.getElementById('complement_disponibilityAt').value
                const constructionAt = document.getElementById('complement_constructionAt').value

                const isFurnished = document.getElementById('complement_isFurnished').checked
                const houseType = document.getElementById('complement_houseType').value
                const apartmentType = document.getElementById('complement_apartmentType').value
                const landType = document.getElementById('complement_landType').value
                const tradeType = document.getElementById('complement_tradeType').value
                const houseEquipment = document.getElementById('complement_houseEquipment').value
                const level = parseInt(document.getElementById('complement_level').value)
                const buildingEquipment = document.getElementById('complement_buildingEquipment').value
                const otherOption = document.getElementById('complement_otherOption').value
                let data = {
                    banner:banner,denomination:denomination,
                    terrace:terrace,washroom:washroom,bathroom:bathroom,wc:wc,balcony:balcony,sanitation:sanitation,jointness:jointness,
                    houseState:houseState,energy:energy,propertyTax:propertyTax,orientation:orientation,disponibility:disponibility,location:location,disponibilityAt:disponibilityAt,constructionAt:constructionAt,
                    isFurnished:isFurnished,houseType:houseType,apartmentType:apartmentType,landType:landType,tradeType:tradeType,houseEquipment:houseEquipment,level:level,buildingEquipment:buildingEquipment,otherOption:otherOption
                }
                console.log(data)
                axios
                    .post(url, data)
                    .then(function(response){
                        console.log('chiffres ajoutées')
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }

            // évenement sur le boutons stepGallery
            stepGallery.onclick = function () {
                stepGallery.className += " d-none";
                stepPublication.className = "btn btn-sm btn-outline-primary";
                navGallery.className = "nav-link disabled";
                navPublication.className = "nav-link active";
                Gallery.className = "tab-pane";
                Publication.className += " active";
            }

            // évenement sur le boutons stepPublication
            stepPublication.onclick = function (event) {
                event.preventDefault()
                // visibilité des éléments
                stepPublication.className = "btn btn-sm btn-outline-primary";
                navGallery.className = "nav-link disabled";
                navPublication.className = "nav-link active";
                Gallery.className = "tab-pane";
                Publication.className += " active";
                // Elements de formulaire à transmettre
                const url = this.href;
                const isWebpublish = document.getElementById('publication_isWebpublish').checked
                const isSocialNetwork = document.getElementById('publication_isSocialNetwork').checked
                const sector = document.getElementById('publication_sector').value
                let data =
                    {
                        isWebpublish:isWebpublish,isSocialNetwork:isSocialNetwork,sector:sector
                    }
                axios
                    .post(url, data)
                    .then(function(response){
                        document.location.href= "{{ path('op_gestapp_property_index') }}";
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }

            // Modal d'ajout d'un vendeur à la fiche
            const modalAddCustomer = document.getElementById('addCustomer')
            modalAddCustomer.addEventListener('show.bs.modal', function (event) {
                // Button that triggered the modal
                var button = event.relatedTarget
                // extraction de la variable
                var recipient = button.getAttribute('data-bs-whatever')
                // mise à jour du lien de soumission du formulaire.
                var modalContent = modalAddCustomer.querySelector('.modal-footer')
                var modalSubmit = modalAddCustomer.querySelector('.modal-footer a')
                modalSubmit.href = '/gestapp/customer/addcustomer/' + recipient
            })

            // -------------
            // Evenement sur le bouton btnAddCustomers - Modal d'ajout d'un vendeur
            // -------------
            const btnAddCustomer = document.getElementById('btnAddCustomer')
            btnAddCustomer.onclick = function(event){
                event.preventDefault()
                const firstName = document.getElementById('customer_firstName').value
                const lastName = document.getElementById('customer_lastName').value
                const adress = document.getElementById('customer_adress').value
                const complement = document.getElementById('customer_complement').value
                const zipcode = document.getElementById('customer_zipcode').value
                const city = document.getElementById('customer_city').value
                const url = this.href
                // construction des data à transmettre
                let data = {
                    firstName:firstName, lastName:lastName, adress:adress, complement:complement, zipcode:zipcode, city:city
                }
                console.log(url)
                // envoie des données
                axios
                    .post(url, data)
                    .then(function(response){
                        console.log('vendeur ajouté')
                        const liste = document.getElementById('listeCustormers').innerHTML = response.data.liste;
                        modalAddCustomer.addEventListener('hide.bs.modal')

                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }

            //new TomSelect("#property_refEmployed",{
            //    plugins: ['remove_button'],
            //    create: true,
            //    onItemAdd:function(){
            //        this.setTextboxValue('');
            //        this.refreshOptions();
            //    },
            //    render:{
            //        option:function(data,escape){
            //            return '<div class="d-flex"><span>' + escape(data.data) + '</span><span class="ms-auto text-muted">' + escape(data.value) + '</span></div>';
            //        },
            //        item:function(data,escape){
            //            return '<div>' + escape(data.data) + '</div>';
            //        }
            //    }
            //});

            new TomSelect("#complement_banner",{
                plugins: ['remove_button'],
                create: true,
                onItemAdd:function(){
                    this.setTextboxValue('');
                    this.refreshOptions();
                },
                render:{
                    option:function(data,escape){
                        return '<div class="d-flex"><span>' + escape(data.data) + '</span><span class="ms-auto text-muted">' + escape(data.value) + '</span></div>';
                    },
                    item:function(data,escape){
                        return '<div>' + escape(data.data) + '</div>';
                    }
                }
            });

            new TomSelect("#complement_orientation",{
                plugins: ['remove_button'],
                create: true,
                onItemAdd:function(){
                    this.setTextboxValue('');
                    this.refreshOptions();
                },
                render:{
                    option:function(data,escape){
                        return '<div class="d-flex"><span>' + escape(data.data) + '</span><span class="ms-auto text-muted">' + escape(data.value) + '</span></div>';
                    },
                    item:function(data,escape){
                        return '<div>' + escape(data.data) + '</div>';
                    }
                }
            });

            new TomSelect("#publication_sector",{
                plugins: ['remove_button'],
                create: true,
                onItemAdd:function(){
                    this.setTextboxValue('');
                    this.refreshOptions();
                },
                render:{
                    option:function(data,escape){
                        return '<div class="d-flex"><span>' + escape(data.data) + '</span><span class="ms-auto text-muted">' + escape(data.value) + '</span></div>';
                    },
                    item:function(data,escape){
                        return '<div>' + escape(data.data) + '</div>';
                    }
                }
            });

            // mise en place du datapicker flatpickr sur les champs de date
            flatpickr(".flatpickr", {
                "locale": "fr",
                enableTime: true,
                altFormat: "j F Y",
                dateFormat: "d/m/Y",
            });
            // mise en place du datapicker flatpickr sur les champs de date
            flatpickr(".flatpickrtime", {
                "locale": "fr",
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",
                time_24hr: true
            });

            ClassicEditor
                .create(document.querySelector('#property_annonce'), {
                    toolbar: [ 'heading','bold', 'italic', 'bulletedList', 'numberedList', 'blockQuote' ],
                    height: 50
                })
                .catch(error => {
                    console.error(error);
                });


        }
    </script>
{%  endblock %}

{% block content %}
    <h1>Créer un nouveau bien Paps Immo</h1>

    {{ include('gestapp/property/_formfirst.html.twig', {'button_label': 'Mettre à jour'}) }}

{% endblock %}

{% block footer %}
    {{ parent() }}
    <section id="modals">
        <!-- Ajout d'un vendeur sur un bien -->
        <div class="modal fade" id="addCustomer" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Ajouter un client à cette fiche</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        {{ render(controller('App\\Controller\\Gestapp\\CustomerController::addCustomer')) }}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <a id="btnAddCustomer" type="button" class="btn btn-sm btn-primary" data-bs-dismiss="modal">Ajouter</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}